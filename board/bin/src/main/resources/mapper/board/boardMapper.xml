<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper >
<mapper namespace="com.example.demo.repository.BoardRepository">

	<!-- 검색 -->
	<sql id="search">
		<trim prefix="WHERE" prefixOverrides="AND">
			<!-- 글 카테고리 -->
			<if test="category != 'all'">
				AND category_cd = #{category}
			</if>
			<if test="keyword != null and keyword != ''">
			<!-- 검색 유형 -->
			<choose>
				<when test="searchType == 'title'">
					AND title LIKE CONCAT('%', #{keyword}, '%')
				</when>
				<when test="searchType == 'content'">
					AND cont LIKE CONCAT('%', #{keyword}, '%')
				</when>
				<when test="searchType == 'titleCont'">
					AND (
							title LIKE CONCAT('%', #{keyword}, '%')
							OR
							cont LIKE CONCAT('%', #{keyword}, '%')
						)
				</when>
				<when test="searchType == 'writer'">
					AND writer_nm LIKE CONCAT('%', #{keyword}, '%')
				</when>
				<otherwise>
					AND (
							title LIKE CONCAT('%', #{keyword}, '%')
							OR
							cont LIKE CONCAT('%', #{keyword}, '%')
							OR
							writer_nm LIKE CONCAT('%', #{keyword}, '%')
						)
				</otherwise>
			</choose>
			</if>
		</trim>
	</sql>

	<!-- 게시글 목록 조회 -->
	<select id="getBoardList" resultType="BoardDto" parameterType="Search">
		SELECT
			b.board_no,
			b.title,
			b.writer_nm,
			b.view_cnt,
			b.reg_dt,
			cc.comm_cd_nm,
			(select datediff(now(), b.reg_dt)) AS diffDay
		FROM
			bt_tb_board b
		INNER JOIN bt_tb_comm_code cc
			ON b.category_cd = cc.comm_cd
		<include refid="search"></include>
		<!-- 정렬 -->
		<trim prefix="ORDER BY">
			<if test="sort == 'last'">reg_dt DESC</if>
			<if test="sort == 'views'">view_cnt DESC</if>
		</trim>
		LIMIT #{startList}, #{listSize}
	</select>

	<!-- 게시글 수 -->
	<select id="getBoardTot" resultType="int" parameterType="Search">
		SELECT
			count(*)
		FROM
			bt_tb_board b
		INNER JOIN bt_tb_comm_code cc
			ON b.category_cd = cc.comm_cd
		<include refid="search"></include>
	</select>

	<!-- 글 카테고리 -->
	<select id="getCategory" resultType="Category">
		SELECT
			comm_cd,
			comm_cd_nm
		FROM
			bt_tb_comm_code
		WHERE
			grp_cd = #{grp_cd}
	</select>

	<!-- 글 상세보기 -->
	<select id="getBoardDetail" resultType="BoardDto" parameterType="int">
		SELECT
			b.board_no,
			b.title,
			b.cont,
			b.writer_nm,
			b.reg_dt,
			b.category_cd,
			cc.comm_cd_nm
		FROM
			bt_tb_board b
		LEFT JOIN bt_tb_comm_code cc
			ON b.category_cd = cc.comm_cd
		WHERE
			board_no = #{board_no}
	</select>

	<!-- 조회수 증가 -->
	<update id="hitBoard" parameterType="int">
		UPDATE
			bt_tb_board
		SET
			view_cnt = IFNULL(view_cnt, 0) + 1
		where
			board_no = #{board_no}
	</update>

	<!-- 글 작성 -->
	<insert id="writeBoard" parameterType="BoardDto">
		INSERT INTO
			bt_tb_board(category_cd, title, cont, writer_nm, password, view_cnt, reg_dt)
		VALUES
			(#{category_cd}, #{title}, #{cont}, #{writer_nm}, #{password}, 0, NOW())
	</insert>

	<!--  글 수정 -->
	<update id="updateBoard" parameterType="BoardDto">
		UPDATE
			bt_tb_board
		SET
			title = #{title},
			category_cd  = #{category_cd},
			cont = #{cont},
			mod_dt = NOW()
		WHERE
			board_no = #{board_no}
	</update>

	<!-- 글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM
			bt_tb_board
		WHERE
			board_no = #{board_no}
	</delete>

	<!-- 글 수정 삭제 시 비밀번호 확인 -->
	<select id="password_chk" resultType="String" parameterType="int">
		SELECT
			password
		FROM
			bt_tb_board
		WHERE
			board_no = #{board_no}
	</select>
</mapper>